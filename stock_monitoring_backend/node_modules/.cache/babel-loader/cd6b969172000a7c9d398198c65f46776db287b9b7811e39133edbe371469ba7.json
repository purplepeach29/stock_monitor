{"ast":null,"code":"var _jsxFileName = \"/home/prachi/Dev/stock_monitor/stock_monitoring_frontend/src/LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async () => {\n    //const username = 'blip';\n    //const password = '123';\n    try {\n      console.log(username);\n      console.log(password);\n      const response = await axios.post('/api/login/', {\n        username,\n        password\n      });\n      //const token = response.data.token;\n      console.log(\"after\");\n      console.log('login for msuccess', response.data); //token);\n\n      // Store token in local storage or state for future requests\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","TextField","Button","axios","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","handleLogin","console","log","response","post","data","error","children","label","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","variant","onClick","_c","$RefreshReg$"],"sources":["/home/prachi/Dev/stock_monitor/stock_monitoring_frontend/src/LoginForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport axios from 'axios';\n\nconst LoginForm: React.FC = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async () => {\n    //const username = 'blip';\n    //const password = '123';\n    try {\n      console.log(username)\n      console.log(password)\n\n      const response = await axios.post('/api/login/', { username, password });\n      //const token = response.data.token;\n      console.log(\"after\")\n\n      console.log('login for msuccess', response.data);//token);\n\n      // Store token in local storage or state for future requests\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n\n  return (\n    <form>\n      <TextField\n        label=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Button variant=\"contained\" onClick={handleLogin}>Login</Button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA;IACA,IAAI;MACFC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MACrBK,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MAErB,MAAMK,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,aAAa,EAAE;QAAER,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACxE;MACAG,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MAEpBD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,QAAQ,CAACE,IAAI,CAAC,CAAC;;MAEjD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA,CAACJ,SAAS;MACRmB,KAAK,EAAC,UAAU;MAChBC,KAAK,EAAEb,QAAS;MAChBc,QAAQ,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFvB,OAAA,CAACJ,SAAS;MACRmB,KAAK,EAAC,UAAU;MAChBS,IAAI,EAAC,UAAU;MACfR,KAAK,EAAEX,QAAS;MAChBY,QAAQ,EAAGC,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFvB,OAAA,CAACH,MAAM;MAAC4B,OAAO,EAAC,WAAW;MAACC,OAAO,EAAEnB,WAAY;MAAAO,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEX,CAAC;AAACrB,EAAA,CAvCID,SAAmB;AAAA0B,EAAA,GAAnB1B,SAAmB;AAyCzB,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}