{"ast":null,"code":"var _jsxFileName = \"/home/prachi/Dev/stock_monitor/stock_monitoring_frontend/src/Watchlist.tsx\",\n  _s = $RefreshSig$();\n// src/Watchlist.tsx\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watchlist = () => {\n  _s();\n  const [watchlistData, setWatchlistData] = useState({});\n  useEffect(() => {\n    const fetchWatchlistData = async () => {\n      try {\n        const response = await axios.get('/api/watchlist/');\n        setWatchlistData(response.data);\n      } catch (error) {\n        console.error('Fetch watchlist data error:', error);\n      }\n    };\n    fetchWatchlistData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Watchlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(watchlistData).map(([symbol, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [symbol, \": \", value]\n      }, symbol, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Watchlist, \"2rYpmYGfOyhC2OjnEJjeh+7XUrU=\");\n_c = Watchlist;\nexport default Watchlist;\nvar _c;\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Watchlist","_s","watchlistData","setWatchlistData","fetchWatchlistData","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","symbol","value","_c","$RefreshReg$"],"sources":["/home/prachi/Dev/stock_monitor/stock_monitoring_frontend/src/Watchlist.tsx"],"sourcesContent":["// src/Watchlist.tsx\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Watchlist: React.FC = () => {\n  const [watchlistData, setWatchlistData] = useState<{ [symbol: string]: number }>({});\n\n  useEffect(() => {\n    const fetchWatchlistData = async () => {\n      try {\n        const response = await axios.get('/api/watchlist/');\n        setWatchlistData(response.data);\n      } catch (error) {\n        console.error('Fetch watchlist data error:', error);\n      }\n    };\n\n    fetchWatchlistData();\n  }, []);\n\n  return (\n    <div>\n      <h2>Watchlist</h2>\n      <ul>\n        {Object.entries(watchlistData).map(([symbol, value]) => (\n          <li key={symbol}>\n            {symbol}: {value}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Watchlist;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAA+B,CAAC,CAAC,CAAC;EAEpFD,SAAS,CAAC,MAAM;IACd,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iBAAiB,CAAC;QACnDH,gBAAgB,CAACE,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDJ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBf,OAAA;MAAAW,QAAA,EACGK,MAAM,CAACC,OAAO,CAACd,aAAa,CAAC,CAACe,GAAG,CAAC,CAAC,CAACC,MAAM,EAAEC,KAAK,CAAC,kBACjDpB,OAAA;QAAAW,QAAA,GACGQ,MAAM,EAAC,IAAE,EAACC,KAAK;MAAA,GADTD,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CA5BID,SAAmB;AAAAoB,EAAA,GAAnBpB,SAAmB;AA8BzB,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}